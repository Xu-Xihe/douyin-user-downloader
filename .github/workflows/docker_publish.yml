name: Docker Publish

on:
  push:
    tags:
      - '*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tags
        id: vars
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          IMAGE=ghcr.io/${{ github.repository }}/douyin-user-downloader
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          # Latest update judge
          if [[ "$TAG" == *"-rc"* ]] || [[ "$TAG" == *"-beta"* ]]; then
            echo "UPDATE_LATEST=false" >> $GITHUB_ENV
          else
            echo "UPDATE_LATEST=true" >> $GITHUB_ENV

      - name: Restore Docker cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE }}:${{ env.TAG }}
            ${{ env.UPDATE_LATEST == 'true' && env.IMAGE + ':latest' || '' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
